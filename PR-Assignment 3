Problem Statement
Speech is the most natural way of expressing ourselves as humans. It is only natural
then to extend this communication medium to computer applications. We define
speech emotion recognition (SER) systems as a collection of methodologies that
process and classify speech signals to detect the embedded emotions. Below we will
show the needed steps to achieve the goal of the assignment.
1. Download the Dataset and Understand the Format (10 Points)
a. We will use CREMA dataset that is available at the following link:
https://www.kaggle.com/dmitrybabko/speech-emotion-recognition-en
b. Write your own function that loads an audio and listen to each of the
classes you have and plot the waveform of the audio.
2. Create the Feature Space (30 Points)
We will create two feature spaces from the audio.
a. You can work on time domain, or you can work in frequency domain.
There are multiple of features that can help improving the model:
i. Zero crossing rate: The rate of sign-changes of the signal during
the duration of a particular frame.
ii. Energy: The sum of squares of the signal values, normalized by
the respective frame length.
b. Convert the audio waveform to mel spectrogram and use this as the
feature space.
3. Building the Model (40 Points)
a. Split the data into 70% training and validation and
30% testing.
b. Use 5% of the training and validation data for
validation.
c. CNN Model:
Build a CNN architecture of your own, a simple
example is shown in the figure. For the time domain
or frequency domain feature space, the feature space 
Prof. Dr. Marwan Torki Eng. Abdelrahman Wael
 Eng. Ismail El-Yamany
will be 1 dimensional, therefore in the architecture we will be using 1D
convolutions. While in melspectogram feature space, the audio is
represented as an image, therefore we will be using 2D convolutions.
N.B. Do not use the built-in models, but you can implement them from
scratch.
4. Big Picture (20 Points)
Compare between the performance of the learned models (Different features,
different learning models) by realizing the following.
a. Compute the accuracy and F-Score for each model.
b. Plot the confusion matrices and find the most confusing classes.
